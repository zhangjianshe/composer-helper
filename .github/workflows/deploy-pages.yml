name: Deploy GWT App to GitHub Pages

on:
  push:
    branches:
      - main # Or your default branch like 'master'
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Only read permission needed for building
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Uses the latest version of the checkout action

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Or 'adopt', 'oracle', etc.
          java-version: '11'      # Or your project's Java version

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build GWT project with Maven
        run: mvn clean compile gwt:compile package install

      - name: Locate GWT output directory
        id: gwt_output
        run: |
          # Determine the GWT output directory.
          # For a typical GWT Maven project, this is often target/<your-module-name>
          # or target/classes/static, depending on your pom.xml configuration.
          # You might need to adjust this path based on your actual build output.
          GWT_OUTPUT_DIR="target/classes/static"

          # Verify the directory exists
          if [ -d "$GWT_OUTPUT_DIR" ]; then
            echo "GWT build output found at: $GWT_OUTPUT_DIR"
            echo "PUBLISH_DIR=$GWT_OUTPUT_DIR" >> $GITHUB_ENV
          else
            echo "Error: GWT output directory '$GWT_OUTPUT_DIR' not found."
            echo "Please check your GWT Maven build output path."
            exit 1
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.PUBLISH_DIR }} # Use the determined GWT output directory

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Set the URL for the environment
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    permissions:
      pages: write    # Required to deploy to GitHub Pages
      id-token: write # Required for OIDC authentication with GitHub Pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment # Gives an ID to this step to reference its outputs
        uses: actions/deploy-pages@v4 # Uses the official GitHub Pages deployment action
